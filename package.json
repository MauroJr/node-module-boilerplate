{
  "name": "node-module-boilerplate",
  "version": "0.0.0-development",
  "description": "My template for node modules with lint, tests, code coverage, type checking, CI, semantic release and interoperability between ES6 modules and CommonJs.",
  "main": "./src/index.js",
  "repository": "git@github.com:MauroJr/node-module-boilerplate.git",
  "author": "Mauro Junior <mauropereirajr@gmail.com>",
  "license": "MIT",
  "engines": {
    "node": ">=8.3.0",
    "npm": ">=5.2.0"
  },
  "dependencies": {},
  "keywords": [
    "modern",
    "node",
    "seed",
    "boilerplate",
    "CI",
    "tests",
    "list",
    "coverage",
    "ES6"
  ],
  "scripts": {
    "?info": "Display information about the scripts.",
    "info": "npm-scripts-info",
    "?start": "Startup the module.",
    "start": "if-env NODE_ENV=production && npm run start:prod || npm run start:dev",
    "?start:prod": "Startup the module with a `production` environment.",
    "start:prod": "NODE_ENV=production node -r dotenv/config ./lib/index.js",
    "?start:dev": "Startup the module with a `development` environment.",
    "start:dev": "node node -r dotenv/config ./src/index.js",
    "?debug": "Start a debugger for the `main` entry point.",
    "debug": "node --inspect --debug-brk -r dotenv/config ./src/index.js",
    "?debug:tests": "Start a debugger for the tests",
    "debug:tests": "mocha --inspect --debug-brk -r dotenv/config ./test/*.js",
    "?commit": "Run a wizard to do a `git commit` and `git push` following commitizen rules.",
    "commit": "git-cz && git push origin HEAD",
    "?commit:retry": "Retry the last `failed` commit",
    "commit:retry": "npm run commit -- --retry",
    "?commit:all": "Add all changes to stage and run `npm run commit`",
    "commit:all": "git add -A && npm run commit",
    "?test": "Run all tests.",
    "test": "npm run lint && nyc mocha ./test/*.js",
    "?test:watch": "Run all tests and watch for changes.",
    "test:watch": "mocha -r dotenv/config ./test/*.js --watch",
    "?lint": "Run Eslint.",
    "lint": "eslint .",
    "?lint:watch": "Run Eslint, and watch for chhanges.",
    "lint:watch": "esw -w --ignore-path .gitignore .",
    "?cov": "Show coverage summary on the console",
    "cov": "nyc report",
    "?cov:ls": "Show a list of files coverage on the console",
    "cov:ls": "nyc report --reporter=text",
    "?cov:html": "Show a coverage HTML report",
    "cov:html": "nyc report --reporter=html && http-server ./.coverage",
    "?setup": "Install dependencies and run the tests.",
    "setup": "npm install && npm test",
    "?setup:ci": "Setup semantic-release and CI",
    "setup:ci": "npx semantic-release-cli setup",
    "?semantic-release": "Automatically publish the package following semantic versioning rules.",
    "semantic-release": "semantic-release",
    "travis-deploy-once": "travis-deploy-once"
  },
  "devDependencies": {
    "chai": "^4.2.0",
    "commitizen": "^3.0.4",
    "cross-env": "^5.2.0",
    "cz-conventional-changelog": "^2.1.0",
    "cz-emoji": "^1.1.2",
    "dotenv": "^6.1.0",
    "eslint": "^5.8.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-plugin-import": "^2.14.0",
    "http-server": "^0.11.1",
    "husky": "^1.1.3",
    "if-env": "^1.0.4",
    "mocha": "^5.2.0",
    "npm-scripts-info": "^0.3.9",
    "nyc": "^13.1.0",
    "semantic-release": "^15.10.8",
    "travis-deploy-once": "^5.0.9"
  },
  "nyc": {
    "check-coverage": true,
    "per-file": true,
    "lines": 80,
    "statements": 80,
    "functions": 80,
    "branches": 80,
    "include": [
      "src/**/*.js"
    ],
    "exclude": [
      "src/**/*.spec.js"
    ],
    "ignore-class-method": "methodToIgnore",
    "reporter": [
      "html",
      "lcov",
      "text",
      "text-summary"
    ],
    "require": [
      "dotenv/config"
    ],
    "extension": [],
    "cache": true,
    "all": true,
    "temp-dir": "",
    "report-dir": "./.coverage"
  },
  "husky": {
    "hooks": {
      "pre-commit": "if-env IGNORE_GHOOKS=true || npm test"
    }
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-emoji"
    },
    "cz-emoji": {
      "types": [
        {
          "emoji": "üåü",
          "name": "feat:",
          "description": "A new feature",
          "code": ":star2:"
        },
        {
          "emoji": "üêû",
          "code": ":beetle:",
          "name": "fix:",
          "description": "A bug fix"
        },
        {
          "name": "test \t\tüöì  Testing improved with new or fixed tests",
          "value": ":police_car:"
        },
        {
          "name": "chore \tüî©  Doesn't modify src or test files",
          "value": ":nut_and_bolt:"
        },
        {
          "name": "style \t‚úèÔ∏è  Doesn't affect the meaning of the code (white-space, semi-colons, etc)",
          "value": ":pencil2:"
        },
        {
          "name": "docs \t\tüìö  Documentation change",
          "value": ":books:"
        },
        {
          "name": "refactor \tüé®  Neither fixes a bug nor adds a feature",
          "value": ":art:"
        },
        {
          "name": "perf \t\tüí∞  Improves performance with this change",
          "value": ":moneybag:"
        },
        {
          "name": "build \tüöÄ  Build system config or external dependencies ($compile)",
          "value": ":rocket:"
        },
        {
          "name": "ci \t\tüö•  CI config files and scripts ($arch)",
          "value": ":traffic_light:"
        },
        {
          "name": "revert \tüíä  Reverts a previous commit",
          "value": ":pill:"
        }
      ],
      "scopes": [
        "$arch",
        "$compile",
        "$contrib",
        "$core",
        "$data",
        "$ui"
      ]
    }
  }
}
